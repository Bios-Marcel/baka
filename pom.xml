<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>link.bios-marcel</groupId>
    <artifactId>baka</artifactId>
    <version>0.1.0</version>
    <name>baka</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <junit.version>5.10.0</junit.version>
        <mainModule>link.biosmarcel.baka</mainModule>
        <mainPackage>link.biosmarcel.baka</mainPackage>
        <mainClass>${mainPackage}.Main</mainClass>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>22-ea+11</version>
        </dependency>

        <!-- Used for filtering language parser -->
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4-runtime</artifactId>
            <version>4.13.1</version>
            <!--
                Due to the fact that the antlr people are not adding a Java module and Java 21+ not supporting
                automatic modules anymore, we are using moditect to generate a module, which we then specify as a direct
                file system dependency.
            -->
            <scope>system</scope>
            <systemPath>${project.build.directory}/modules/antlr4-runtime-4.13.1.jar</systemPath>
        </dependency>

        <!-- Nullness annotations -->
        <dependency>
            <groupId>org.jspecify</groupId>
            <artifactId>jspecify</artifactId>
            <version>0.3.0</version>
        </dependency>

        <!-- Used to read payment files -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>1.11.0</version>
        </dependency>

        <!-- Used for storing all application data locally. -->
        <dependency>
            <groupId>org.eclipse.store</groupId>
            <artifactId>storage-embedded</artifactId>
            <version>1.3.2</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.store</groupId>
            <artifactId>storage-embedded-configuration</artifactId>
            <version>1.3.2</version>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <!-- https://mvnrepository.com/artifact/org.antlr/antlr4-maven-plugin -->
                <groupId>org.antlr</groupId>
                <artifactId>antlr4-maven-plugin</artifactId>
                <version>4.13.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>antlr4</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.13.0</version>
                <configuration>
                    <source>22</source>
                    <target>22</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.moditect</groupId>
                <artifactId>moditect-maven-plugin</artifactId>
                <version>1.2.2.Final</version>
                <executions>
                    <execution>
                        <id>add-module-infos</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>add-module-info</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/modules</outputDirectory>
                            <overwriteExistingFiles>true</overwriteExistingFiles>
                            <modules>
                                <module>
                                    <artifact>
                                        <groupId>org.antlr</groupId>
                                        <artifactId>antlr4-runtime</artifactId>
                                        <version>4.13.1</version>
                                    </artifact>
                                    <moduleInfoSource>
                                        module org.antlr.antlr4.runtime {
                                        exports org.antlr.v4.runtime;
                                        exports org.antlr.v4.runtime.atn;
                                        exports org.antlr.v4.runtime.dfa;
                                        exports org.antlr.v4.runtime.misc;
                                        exports org.antlr.v4.runtime.tree;
                                        exports org.antlr.v4.runtime.tree.pattern;
                                        exports org.antlr.v4.runtime.tree.xpath;
                                        }
                                    </moduleInfoSource>
                                </module>
                            </modules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.panteleyev</groupId>
                <artifactId>jpackage-maven-plugin</artifactId>
                <version>1.6.5</version>
                <configuration>
                    <name>Baka</name>
                    <vendor>link.biosmarcel</vendor>
                    <destination>target/dist</destination>
                    <module>${mainModule}/${mainClass}</module>
                    <runtimeImage>target/app</runtimeImage>
                    <icon>icon.ico</icon>
                    <winMenu>true</winMenu>
                    <winPerUserInstall>true</winPerUserInstall>
                    <javaOptions>
                        <option>-Dfile.encoding=UTF-8</option>
                    </javaOptions>
                </configuration>
                <executions>
                    <execution>
                        <id>win</id>
                        <configuration>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <executions>
                    <execution>
                        <!-- Default configuration for running with: mvn clean javafx:run -->
                        <id>default-cli</id>
                        <configuration>
                            <mainClass>${mainPackage}/${mainClass}</mainClass>
                            <launcher>app</launcher>
                            <jlinkZipName>app</jlinkZipName>
                            <jlinkImageName>app</jlinkImageName>
                            <noManPages>true</noManPages>
                            <stripDebug>true</stripDebug>
                            <noHeaderFiles>true</noHeaderFiles>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>